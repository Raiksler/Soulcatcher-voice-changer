from emoji import emojize
import json

start = emojize("Спасибо за использование Soulcatcher!\n\nБот предназначен для распознавания, модификации или переозвучки голоса в голосовых сообщениях. На данный момент, бот умеет работать в четырех режимах:\n\n:microphone: - Распознавание текста в голосовых сообщениях.\n:robot: - Машинная переозвучка голосового сообщения.\n:ninja: - Изменение тональности голоса в голосовом сообщении.\n:scroll:❓ - Перевод текстовых сообщений.\n\n/help - для просмотра доступных команд и выбора режима работы.\n\n:frog: @Raiksler - связь с разработчиком.")
help = emojize("/help - список команд.\n/changelog - список последних изменений.\n\nБот может работать в нескольких режимах, для начала работы, выберите один из режимов ниже и отправьте боту голосовое сообщение для обработки.\n\n/recognite - распознать текст в голосовом сообщении.\n\n/pitch - изменить тональность голосового сообщения.\n\n/resound - машинно переозвучить голосовое сообщение.\n\n/translate - перевести текст входящего текстового сообщения на ваш язык. Доступен перевод с 108 языков. Конечный язык зависит от языка, выбранного на вашем усройстве.\n\nДополнительные возможности:\n\n:check_mark: При работе в любом режиме, вы можете не только записывать голосовые сообщения непосредственно в боте, но и пересылать ему на обработку сообщения из других диалогов. Бот обработает их в выбранном режиме.\n\n:check_mark: Бота можно добавить в любую беседу, после чего, любой из его режимов можно будет использовать прямо из нее. Каждый участник беседы может переключить бота в нужный ему режим. Настройки бота, добавленного в беседу независимы для каждого участника. Для корректной работы, боту необходимо выдать права администратора.")
pitch = emojize(":check_mark: Выбран режим смены тональности голоса.\n\nБот изменит тональность любого входящего голосового сообщения в случайном диапазоне.")
recognition = emojize(":check_mark: Выбран режим распознавания голоса.\n\nДля начала работы, выберите язык распознаваемых сообщений. Доступны следующие варианты:\n\n:Russia: /r_ru - русский\n:United_Kingdom: /r_en - английский\n:France: /r_fr - французский\n:Germany: /r_de - немецкий\n:Indonesia: /r_id - индонезийский\n:Portugal: /r_pt - португальский\n:Spain: /r_es - испанский\n:India: /r_in - хинди\n:Turkey: /r_tr - турецкий")
chosen_lg_to_recognite = emojize("Вы выбрали {lang} язык для распознавания. Бот попытается распознать текст любого входящего голосового сообщения.")
text_to_speech = emojize(":check_mark: Выбран режим машинной переозвучки.\n\nБот попытается распознать текст любого входящего голосового сообщения и вернет машинно переозвученный вариант.\n\n'Анонимность - все, качество - ничто!' (с)")
translate_text = emojize(":check_mark: Выбран режим перевода текста.\n\nБот попытается перевести текст любого входящего сообщения и вернет переведенный вариант.")

changelog = emojize("Soulcatcher 1.2:\n\n:check_mark: Добавлен режим перевода текста, подробности по команде /help\n\n:check_mark: Распознавание речи, отныне, возможно с девяти языков. Подробности по команде /recognite.")

def format_translation(translation):
    code = translation['code']
    with open('country_codes.json', 'r') as file:
        country_list = json.load(file)
    country_name = country_list[0][code]
    result = ":{country}: {text}".format(country=country_name, text=translation['text'])
    return result

def chosen_lg_to_recognite(lang):
    languages = {"/r_ru" : "русский", "/r_en" : "английский", "/r_fr" : "французский", "/r_de" : "немецкий", "/r_id" : "индонезийский", "/r_pt" : "португальский", "/r_es" : "испанский", "/r_in" : "индийский (хинди)", "/r_tr" : "турецкий"}
    flags = {"/r_ru" : ":Russia:", "/r_en" : ":United_Kingdom:", "/r_fr" : ":France:", "/r_de" : ":Germany:", "/r_id" : ":Indonesia:", "/r_pt" : ":Portugal:", "/r_es" : ":Spain:", "/r_in" : ":India:", "/r_tr" : ":Turkey:"}
    result = emojize("{flag} Для распознавания выбран {lang} язык. Бот попытается распознать текст любого входящего голосового сообщения.".format(flag=flags[lang], lang=languages[lang]))
    return result

